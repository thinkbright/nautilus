/*
	@theme Nautilus
	@override-placeholders html, xml, css, php, js, html-php
	@author Rommert Zijlstra
	@version 1.0b3
	@Based on the Argonaut theme for TextMate
*/

@base {
	background-color: rgba(12, 24, 48, 1);
	color: #B2B2B2;
	font-weight: normal;
	insertion-point-color: #FF2200;
	selection-background-color: #002F53;
}

tag, source, sourcecode { spell-check: disabled; }

/* General */
class { color: #7A88F6; }
comment,
comment > punctuation { color: #00A6FF; }
constant { color:  #A4ED2D; }
function,
identifier.function { color: #FFFFFF; }
function name,
identifier.function name { color: #FFCA00; }
function.support name,
identifier.function.support name { color: #815DB3; }
keyword { color: #FFFFFF; }
operator,
keyword.operator { color: #606E7E; }
numeric { color: #D70000; }
string,
string punctuation { color: #6497C5; }
variable,
identifier.variable { color: #0068C5; }

/* HTML */
html * { font-weight: normal; }

tag,
tag.doctype punctuation.definition { color: #FFFFFF; }
tag name { color: #0065D3; }
tag.doctype { color: #888888; }

tag.script,
embedded { background-color: rgba(8, 16, 32, 0.5); }

/* CSS */
css { spell-check: disabled; }

css > css.selector,
* css > property-value zunit { color: #B2B2B2; }

* css > keyword.control,
css punctuation { color: #FFFFFF; }
* css > support.constant { color: #FFCA00; }

* css > property-name { color: #7A88F6; }
* css > property-value { color: #06960E; }
* css > property-value color,
* css > property-value punctuation.definition { color: #A4ED2D; }
* css > property-value nzumeric { color: #D70000; }

* css > support.function,
* css > property-value support.function { color: #815DB3; }
* css > property-value variable { color: #6497C5; }

/* JS */
js support.constant { color: #06960E; }
js constant.numeric { color: #D70000; }

js function { color: #FFFFFF; }
js function name { color: #FFCA00; }
js function.dom { color: #815DB3; }

/* PHP */
php comment.phpDoc { color: #00A6FF; }
php comment.phpDoc.keyword { color: #B2B2B2; }

php container.class name,
php class.name,
php identifier.function.class class.name { color: #7A88F6; font-weight: normal; }

php delimiter.embedded.source,
php delimiter.embedded.source keyword.definition { color: #B2B2B2; }

php > container.block identifier.function,
php > identifier.function,
php > identifier.function delimiter.parenthesis,
php > identifier.function identifier.function,
php > identifier.function name { color: #FFFFFF; font-weight: normal; }

php identifier.variable,
php identifier.variable delimiter,
php identifier.variable operator.dollar-sign,
php identifier.variable property.name { color: #0068C5; }

php > identifier.function.support name,
php keyword.definition.array,
php keyword.constant.echo,
php keyword.constant.print { color: #815DB3; font-weight: normal; }

php keyword.constant.other,
php literal.escape,
php literal.keyword.bool,
php literal.keyword.nothing { color: #A4ED2D; }

php keyword.constant.core,
php keyword.constant.std { color: #06960E; }

php keyword { background-color: rgba(0, 0, 0, 0); color: #FFFFFF; }

php literal.numeric { background: rgba(0, 0, 0, 0); color: #D70000; }
php literal.string { font-weight: normal; }

php delimiter.pointer,
php operator.pointer { color: #B2B2B2; }